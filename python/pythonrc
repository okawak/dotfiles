#!/usr/bin/env python3


def is_vanilla() -> bool:
    """:return: whether running "vanilla" Python"""
    import sys

    return not hasattr(__builtins__, "__IPYTHON__") and "bpython" not in sys.argv[0]


def setup_history():
    """read and write history from state file"""
    import os
    import atexit
    import readline
    from pathlib import Path

    # https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html#variables
    if state_home := os.environ.get("XDG_STATE_HOME"):
        state_home = Path(state_home)
    else:
        state_home = Path.home() / ".local" / "state"

    history: Path = state_home / "python_history"

    history.parent.mkdir(parents=True, exist_ok=True)
    if history.exists() and not history.is_file():
        raise FileExistsError(f"{history} exists but is not a file.")

    if not history.exists():
        history.touch()

    try:
        readline.read_history_file(str(history))
    except (FileNotFoundError, OSError) as e:
        print(f"Warning: Could not read history file: {e}")

    atexit.register(readline.write_history_file, str(history))


if is_vanilla():
    setup_history()
