#
#  ~/.zshrc
#

HISTFILE="$XDG_STATE_HOME"/zsh/history
# Completion files: Use XDG dirs
#[ -d "$XDG_CACHE_HOME"/zsh ] || mkdir -p "$XDG_CACHE_HOME"/zsh
#zstyle ':completion:*' cache-path "$XDG_CACHE_HOME"/zsh/zcompcache
#autoload -U compinit
#compinit -d "$XDG_CACHE_HOME"/zsh/zcompdump-$ZSH_VERSION

setopt hist_ignore_dups
setopt hist_ignore_all_dups

# emacs key-bind
bindkey -e

WORDCHARS=${WORDCHARS//[\/]/}

case ${OSTYPE} in
darwin*)
    eval "$(/opt/homebrew/bin/brew shellenv)"

    # fzf module configuration
    [ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh ] && eval "$(fzf --zsh)"
    ;;
linux*)
    # fzf module configuration
    [ -f "/usr/share/fzf/shell/key-bindings.zsh" ] && source "/usr/share/fzf/shell/key-bindings.zsh"
    ;;
esac

path=(
    ${XDG_BIN_HOME}(N-/)
    $path
)

# zim setting
zstyle ':zim:git' aliases-prefix 'g'
zstyle ':zim:input' double-dot-expand yes
ZSH_AUTOSUGGEST_MANUAL_REBIND=1
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim
# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
    if command -v curl >/dev/null; then
        curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
            https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
    else
        mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
            https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
    fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
    source ${ZIM_HOME}/zimfw.zsh init -q
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh

zmodload -F zsh/terminfo +p:terminfo
# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
for key ('k') bindkey -M vicmd ${key} history-substring-search-up
for key ('j') bindkey -M vicmd ${key} history-substring-search-down
unset key

# starship setting
if command -v starship >/dev/null 2>&1; then
    eval "$(starship init zsh)"
fi

# mise setting
if command -v mise >/dev/null 2>&1; then
    eval "$(mise activate zsh)"
fi

# rust setting
if [ -f ${XDG_DATA_HOME}/cargo/env ]; then
    echo "to update rust, > rustup update"
    source ${XDG_DATA_HOME}/cargo/env
fi

# artemis
if [ -d ${HOME}/art_analysis ]; then
    # ROOT
    source ${HOME}/Cern/root/root_install/bin/thisroot.sh >/dev/null 2>&1

    # SRIMLIB
    source ${HOME}/repos/SRIMlib/thisSRIMlib.sh >/dev/null 2>&1

    # artemis
    source ${HOME}/repos/artemis/install/bin/thisartemis.sh >/dev/null 2>&1
    export EXP_NAME="si26a"
    export EXP_NAME_OLD="develop"
    path=(
        ${HOME}/art_analysis/bin
        $path
    )
    source ${HOME}/art_analysis/bin/art_setting -q
fi
